name: CI Pipeline

on:
  push:
    branches:
      - feat/github-ci
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          PGDATA: /data/postgres
        ports:
          - 5432:5432

      zipkin:
        image: openzipkin/zipkin
        ports:
          - 9411:9411

      rabbitmq:
        image: rabbitmq:3.9.11-management-alpine
        ports:
          - 5672:5672
          - 15672:15672

      zookeeper:
        image: confluentinc/cp-zookeeper:7.0.1
        ports:
          - 2181:2181
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000

      kafka:
        image: confluentinc/cp-kafka:7.0.1
        ports:
          - 9092:9092
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: "localhost:2181"
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      eureka:
        image: springcloud/eureka
        ports:
          - 8761:8761

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Config Service
        run: |
          cd config-service
          mvn clean package -DskipTests
          docker build -t config-service:latest .

      - name: Start Config Service
        run: |
          docker run -d --name config-server -p 8888:8888 --network="host" config-service:latest
        env:
          EUREKA_HOST: localhost
          ZIPKIN_HOST: localhost

      - name: Install dependencies
        run: mvn dependency:go-offline -B

      - name: Run tests
        env:
          SPRING_PROFILES_ACTIVE: test
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/user-test
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: root
          SPRING_KAFKA_BOOTSTRAP_SERVERS: localhost:9092
          SPRING_RABBITMQ_HOST: localhost
          SPRING_EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://localhost:8761/eureka
          CONFIG_SERVER_URL: http://localhost:8888
        run: mvn test -B

      - name: Stop Config Service
        if: always()
        run: docker stop config-server && docker rm config-server
